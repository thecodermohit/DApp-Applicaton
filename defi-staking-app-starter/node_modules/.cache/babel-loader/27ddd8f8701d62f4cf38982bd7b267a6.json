{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nfunction _decode(input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '');\n  var length = input.length;\n  var bits = 0;\n  var value = 0;\n  var index = 0;\n  var output = new Uint8Array(length * 5 / 8 | 0);\n  for (var i = 0; i < length; i++) {\n    value = value << 5 | alphabet.indexOf(input[i]);\n    bits += 5;\n    if (bits >= 8) {\n      output[index++] = value >>> bits - 8 & 255;\n      bits -= 8;\n    }\n  }\n  return output.buffer;\n}\nfunction _encode(buffer, alphabet) {\n  var length = buffer.byteLength;\n  var view = new Uint8Array(buffer);\n  var padding = alphabet.indexOf('=') === alphabet.length - 1;\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1);\n  }\n  var bits = 0;\n  var value = 0;\n  var output = '';\n  for (var i = 0; i < length; i++) {\n    value = value << 8 | view[i];\n    bits += 8;\n    while (bits >= 5) {\n      output += alphabet[value >>> bits - 5 & 31];\n      bits -= 5;\n    }\n  }\n  if (bits > 0) {\n    output += alphabet[value << 5 - bits & 31];\n  }\n  if (padding) {\n    while (output.length % 8 !== 0) {\n      output += '=';\n    }\n  }\n  return output;\n}\nmodule.exports = function base32(alphabet) {\n  return {\n    encode: function encode(input) {\n      if (typeof input === 'string') {\n        return _encode(Uint8Array.from(input), alphabet);\n      }\n      return _encode(input, alphabet);\n    },\n    decode: function decode(input) {\n      var _iterator = _createForOfIteratorHelper(input),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var char = _step.value;\n          if (alphabet.indexOf(char) < 0) {\n            throw new Error('invalid base32 character');\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return _decode(input, alphabet);\n    }\n  };\n};","map":{"version":3,"names":["_createForOfIteratorHelper","require","default","decode","input","alphabet","replace","RegExp","length","bits","value","index","output","Uint8Array","i","indexOf","buffer","encode","byteLength","view","padding","substring","module","exports","base32","from","_iterator","_step","s","n","done","char","Error","err","e","f"],"sources":["C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/multihashes/node_modules/multibase/src/base32.js"],"sourcesContent":["'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}