{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require('readable-stream'),\n  Transform = _require.Transform;\nmodule.exports = function (KeccakState) {\n  return /*#__PURE__*/function (_Transform) {\n    \"use strict\";\n\n    _inherits(Keccak, _Transform);\n    var _super = _createSuper(Keccak);\n    function Keccak(rate, capacity, delimitedSuffix, hashBitLength, options) {\n      var _this;\n      _classCallCheck(this, Keccak);\n      _this = _super.call(this, options);\n      _this._rate = rate;\n      _this._capacity = capacity;\n      _this._delimitedSuffix = delimitedSuffix;\n      _this._hashBitLength = hashBitLength;\n      _this._options = options;\n      _this._state = new KeccakState();\n      _this._state.initialize(rate, capacity);\n      _this._finalized = false;\n      return _this;\n    }\n    _createClass(Keccak, [{\n      key: \"_transform\",\n      value: function _transform(chunk, encoding, callback) {\n        var error = null;\n        try {\n          this.update(chunk, encoding);\n        } catch (err) {\n          error = err;\n        }\n        callback(error);\n      }\n    }, {\n      key: \"_flush\",\n      value: function _flush(callback) {\n        var error = null;\n        try {\n          this.push(this.digest());\n        } catch (err) {\n          error = err;\n        }\n        callback(error);\n      }\n    }, {\n      key: \"update\",\n      value: function update(data, encoding) {\n        if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n        if (this._finalized) throw new Error('Digest already called');\n        if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n        this._state.absorb(data);\n        return this;\n      }\n    }, {\n      key: \"digest\",\n      value: function digest(encoding) {\n        if (this._finalized) throw new Error('Digest already called');\n        this._finalized = true;\n        if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix);\n        var digest = this._state.squeeze(this._hashBitLength / 8);\n        if (encoding !== undefined) digest = digest.toString(encoding);\n        this._resetState();\n        return digest;\n      }\n\n      // remove result from memory\n    }, {\n      key: \"_resetState\",\n      value: function _resetState() {\n        this._state.initialize(this._rate, this._capacity);\n        return this;\n      }\n\n      // because sometimes we need hash right now and little later\n    }, {\n      key: \"_clone\",\n      value: function _clone() {\n        var clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options);\n        this._state.copy(clone._state);\n        clone._finalized = this._finalized;\n        return clone;\n      }\n    }]);\n    return Keccak;\n  }(Transform);\n};","map":{"version":3,"names":["_require","require","Transform","module","exports","KeccakState","_Transform","_inherits","Keccak","_super","_createSuper","rate","capacity","delimitedSuffix","hashBitLength","options","_this","_classCallCheck","call","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","_createClass","key","value","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","data","Buffer","isBuffer","TypeError","Error","from","absorb","absorbLastFewBits","squeeze","undefined","toString","_resetState","_clone","clone","copy"],"sources":["C:/Users/acer08022023/desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/keccak/lib/api/keccak.js"],"sourcesContent":["const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}