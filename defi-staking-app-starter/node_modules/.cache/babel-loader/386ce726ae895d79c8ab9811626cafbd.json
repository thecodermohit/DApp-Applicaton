{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require('readable-stream'),\n  Transform = _require.Transform;\nmodule.exports = function (KeccakState) {\n  return /*#__PURE__*/function (_Transform) {\n    \"use strict\";\n\n    _inherits(Shake, _Transform);\n    var _super = _createSuper(Shake);\n    function Shake(rate, capacity, delimitedSuffix, options) {\n      var _this;\n      _classCallCheck(this, Shake);\n      _this = _super.call(this, options);\n      _this._rate = rate;\n      _this._capacity = capacity;\n      _this._delimitedSuffix = delimitedSuffix;\n      _this._options = options;\n      _this._state = new KeccakState();\n      _this._state.initialize(rate, capacity);\n      _this._finalized = false;\n      return _this;\n    }\n    _createClass(Shake, [{\n      key: \"_transform\",\n      value: function _transform(chunk, encoding, callback) {\n        var error = null;\n        try {\n          this.update(chunk, encoding);\n        } catch (err) {\n          error = err;\n        }\n        callback(error);\n      }\n    }, {\n      key: \"_flush\",\n      value: function _flush() {}\n    }, {\n      key: \"_read\",\n      value: function _read(size) {\n        this.push(this.squeeze(size));\n      }\n    }, {\n      key: \"update\",\n      value: function update(data, encoding) {\n        if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer');\n        if (this._finalized) throw new Error('Squeeze already called');\n        if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding);\n        this._state.absorb(data);\n        return this;\n      }\n    }, {\n      key: \"squeeze\",\n      value: function squeeze(dataByteLength, encoding) {\n        if (!this._finalized) {\n          this._finalized = true;\n          this._state.absorbLastFewBits(this._delimitedSuffix);\n        }\n        var data = this._state.squeeze(dataByteLength);\n        if (encoding !== undefined) data = data.toString(encoding);\n        return data;\n      }\n    }, {\n      key: \"_resetState\",\n      value: function _resetState() {\n        this._state.initialize(this._rate, this._capacity);\n        return this;\n      }\n    }, {\n      key: \"_clone\",\n      value: function _clone() {\n        var clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options);\n        this._state.copy(clone._state);\n        clone._finalized = this._finalized;\n        return clone;\n      }\n    }]);\n    return Shake;\n  }(Transform);\n};","map":{"version":3,"names":["_require","require","Transform","module","exports","KeccakState","_Transform","_inherits","Shake","_super","_createSuper","rate","capacity","delimitedSuffix","options","_this","_classCallCheck","call","_rate","_capacity","_delimitedSuffix","_options","_state","initialize","_finalized","_createClass","key","value","_transform","chunk","encoding","callback","error","update","err","_flush","_read","size","push","squeeze","data","Buffer","isBuffer","TypeError","Error","from","absorb","dataByteLength","absorbLastFewBits","undefined","toString","_resetState","_clone","clone","copy"],"sources":["C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/keccak/lib/api/shake.js"],"sourcesContent":["const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n"],"mappings":";;;;AAAA,IAAAA,QAAA,GAAsBC,OAAO,CAAC,iBAAiB,CAAC;EAAxCC,SAAS,GAAAF,QAAA,CAATE,SAAS;AAEjBC,MAAM,CAACC,OAAO,GAAG,UAACC,WAAW;EAAA,8BAAAC,UAAA;IAAA;;IAAAC,SAAA,CAAAC,KAAA,EAAAF,UAAA;IAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAF,KAAA;IAC3B,SAAAA,MAAaG,IAAI,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,OAAO,EAAE;MAAA,IAAAC,KAAA;MAAAC,eAAA,OAAAR,KAAA;MACrDO,KAAA,GAAAN,MAAA,CAAAQ,IAAA,OAAMH,OAAO;MAEbC,KAAA,CAAKG,KAAK,GAAGP,IAAI;MACjBI,KAAA,CAAKI,SAAS,GAAGP,QAAQ;MACzBG,KAAA,CAAKK,gBAAgB,GAAGP,eAAe;MACvCE,KAAA,CAAKM,QAAQ,GAAGP,OAAO;MAEvBC,KAAA,CAAKO,MAAM,GAAG,IAAIjB,WAAW,EAAE;MAC/BU,KAAA,CAAKO,MAAM,CAACC,UAAU,CAACZ,IAAI,EAAEC,QAAQ,CAAC;MACtCG,KAAA,CAAKS,UAAU,GAAG,KAAK;MAAA,OAAAT,KAAA;IACzB;IAACU,YAAA,CAAAjB,KAAA;MAAAkB,GAAA;MAAAC,KAAA,EAED,SAAAC,WAAYC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;QACrC,IAAIC,KAAK,GAAG,IAAI;QAChB,IAAI;UACF,IAAI,CAACC,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC;QAC9B,CAAC,CAAC,OAAOI,GAAG,EAAE;UACZF,KAAK,GAAGE,GAAG;QACb;QAEAH,QAAQ,CAACC,KAAK,CAAC;MACjB;IAAC;MAAAN,GAAA;MAAAC,KAAA,EAED,SAAAQ,OAAA,EAAU,CAAC;IAAC;MAAAT,GAAA;MAAAC,KAAA,EAEZ,SAAAS,MAAOC,IAAI,EAAE;QACX,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC;MAC/B;IAAC;MAAAX,GAAA;MAAAC,KAAA,EAED,SAAAM,OAAQO,IAAI,EAAEV,QAAQ,EAAE;QACtB,IAAI,CAACW,MAAM,CAACC,QAAQ,CAACF,IAAI,CAAC,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIG,SAAS,CAAC,mCAAmC,CAAC;QAChH,IAAI,IAAI,CAACnB,UAAU,EAAE,MAAM,IAAIoB,KAAK,CAAC,wBAAwB,CAAC;QAC9D,IAAI,CAACH,MAAM,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAEA,IAAI,GAAGC,MAAM,CAACI,IAAI,CAACL,IAAI,EAAEV,QAAQ,CAAC;QAE9D,IAAI,CAACR,MAAM,CAACwB,MAAM,CAACN,IAAI,CAAC;QAExB,OAAO,IAAI;MACb;IAAC;MAAAd,GAAA;MAAAC,KAAA,EAED,SAAAY,QAASQ,cAAc,EAAEjB,QAAQ,EAAE;QACjC,IAAI,CAAC,IAAI,CAACN,UAAU,EAAE;UACpB,IAAI,CAACA,UAAU,GAAG,IAAI;UACtB,IAAI,CAACF,MAAM,CAAC0B,iBAAiB,CAAC,IAAI,CAAC5B,gBAAgB,CAAC;QACtD;QAEA,IAAIoB,IAAI,GAAG,IAAI,CAAClB,MAAM,CAACiB,OAAO,CAACQ,cAAc,CAAC;QAC9C,IAAIjB,QAAQ,KAAKmB,SAAS,EAAET,IAAI,GAAGA,IAAI,CAACU,QAAQ,CAACpB,QAAQ,CAAC;QAE1D,OAAOU,IAAI;MACb;IAAC;MAAAd,GAAA;MAAAC,KAAA,EAED,SAAAwB,YAAA,EAAe;QACb,IAAI,CAAC7B,MAAM,CAACC,UAAU,CAAC,IAAI,CAACL,KAAK,EAAE,IAAI,CAACC,SAAS,CAAC;QAClD,OAAO,IAAI;MACb;IAAC;MAAAO,GAAA;MAAAC,KAAA,EAED,SAAAyB,OAAA,EAAU;QACR,IAAMC,KAAK,GAAG,IAAI7C,KAAK,CAAC,IAAI,CAACU,KAAK,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAACC,QAAQ,CAAC;QACzF,IAAI,CAACC,MAAM,CAACgC,IAAI,CAACD,KAAK,CAAC/B,MAAM,CAAC;QAC9B+B,KAAK,CAAC7B,UAAU,GAAG,IAAI,CAACA,UAAU;QAElC,OAAO6B,KAAK;MACd;IAAC;IAAA,OAAA7C,KAAA;EAAA,EAhEmDN,SAAS;AAAA,CAiE9D"},"metadata":{},"sourceType":"script"}