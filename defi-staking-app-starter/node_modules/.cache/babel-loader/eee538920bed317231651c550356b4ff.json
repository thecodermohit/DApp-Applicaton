{"ast":null,"code":"var BN = require(\"bn.js\");\nvar Bytes = require(\"./bytes\");\nvar fromBN = function fromBN(bn) {\n  return \"0x\" + bn.toString(\"hex\");\n};\nvar toBN = function toBN(str) {\n  return new BN(str.slice(2), 16);\n};\nvar fromString = function fromString(str) {\n  var bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\nvar toEther = function toEther(wei) {\n  return toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n};\nvar fromEther = function fromEther(eth) {\n  return mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n};\nvar toString = function toString(a) {\n  return toBN(a).toString(10);\n};\nvar fromNumber = function fromNumber(a) {\n  return typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n};\nvar toNumber = function toNumber(a) {\n  return toBN(a).toNumber();\n};\nvar toUint256 = function toUint256(a) {\n  return Bytes.pad(32, a);\n};\nvar bin = function bin(method) {\n  return function (a, b) {\n    return fromBN(toBN(a)[method](toBN(b)));\n  };\n};\nvar add = bin(\"add\");\nvar mul = bin(\"mul\");\nvar div = bin(\"div\");\nvar sub = bin(\"sub\");\nmodule.exports = {\n  toString: toString,\n  fromString: fromString,\n  toNumber: toNumber,\n  fromNumber: fromNumber,\n  toEther: toEther,\n  fromEther: fromEther,\n  toUint256: toUint256,\n  add: add,\n  mul: mul,\n  div: div,\n  sub: sub\n};","map":{"version":3,"names":["BN","require","Bytes","fromBN","bn","toString","toBN","str","slice","fromString","toEther","wei","toNumber","div","fromEther","eth","mul","fromNumber","Math","floor","a","test","toUint256","pad","bin","method","b","add","sub","module","exports"],"sources":["C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/web3-eth-accounts/node_modules/eth-lib/lib/nat.js"],"sourcesContent":["const BN = require(\"bn.js\");\nconst Bytes = require(\"./bytes\");\n\nconst fromBN = bn => \"0x\" + bn.toString(\"hex\");\n\nconst toBN = str => new BN(str.slice(2), 16);\n\nconst fromString = str => {\n  const bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nconst toEther = wei => toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n\nconst fromEther = eth => mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n\nconst toString = a => toBN(a).toString(10);\n\nconst fromNumber = a => typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n\nconst toNumber = a => toBN(a).toNumber();\n\nconst toUint256 = a => Bytes.pad(32, a);\n\nconst bin = method => (a, b) => fromBN(toBN(a)[method](toBN(b)));\n\nconst add = bin(\"add\");\nconst mul = bin(\"mul\");\nconst div = bin(\"div\");\nconst sub = bin(\"sub\");\n\nmodule.exports = {\n  toString,\n  fromString,\n  toNumber,\n  fromNumber,\n  toEther,\n  fromEther,\n  toUint256,\n  add,\n  mul,\n  div,\n  sub\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}