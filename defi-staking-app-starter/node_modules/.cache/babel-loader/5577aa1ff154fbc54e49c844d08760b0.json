{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/acer08022023/Desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nvar logger = new Logger(version);\nexport function checkResultErrors(result) {\n  // Find the first error (if any)\n  var errors = [];\n  var checkErrors = function checkErrors(path, object) {\n    if (!Array.isArray(object)) {\n      return;\n    }\n    for (var key in object) {\n      var childPath = path.slice();\n      childPath.push(key);\n      try {\n        checkErrors(childPath, object[key]);\n      } catch (error) {\n        errors.push({\n          path: childPath,\n          error: error\n        });\n      }\n    }\n  };\n  checkErrors([], result);\n  return errors;\n}\nexport var Coder = /*#__PURE__*/function () {\n  function Coder(name, type, localName, dynamic) {\n    _classCallCheck(this, Coder);\n    // @TODO: defineReadOnly these\n    this.name = name;\n    this.type = type;\n    this.localName = localName;\n    this.dynamic = dynamic;\n  }\n  _createClass(Coder, [{\n    key: \"_throwError\",\n    value: function _throwError(message, value) {\n      logger.throwArgumentError(message, this.localName, value);\n    }\n  }]);\n  return Coder;\n}();\nexport var Writer = /*#__PURE__*/function () {\n  function Writer(wordSize) {\n    _classCallCheck(this, Writer);\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    this._data = arrayify([]);\n    this._padding = new Uint8Array(wordSize);\n  }\n  _createClass(Writer, [{\n    key: \"data\",\n    get: function get() {\n      return hexlify(this._data);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._data.length;\n    }\n  }, {\n    key: \"_writeData\",\n    value: function _writeData(data) {\n      this._data = concat([this._data, data]);\n      return data.length;\n    }\n    // Arrayish items; padded on the right to wordSize\n  }, {\n    key: \"writeBytes\",\n    value: function writeBytes(value) {\n      var bytes = arrayify(value);\n      if (bytes.length % this.wordSize) {\n        bytes = concat([bytes, this._padding.slice(bytes.length % this.wordSize)]);\n      }\n      return this._writeData(bytes);\n    }\n  }, {\n    key: \"_getValue\",\n    value: function _getValue(value) {\n      var bytes = arrayify(BigNumber.from(value));\n      if (bytes.length > this.wordSize) {\n        logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n          length: this.wordSize,\n          offset: bytes.length\n        });\n      }\n      if (bytes.length % this.wordSize) {\n        bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n      }\n      return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      return this._writeData(this._getValue(value));\n    }\n  }, {\n    key: \"writeUpdatableValue\",\n    value: function writeUpdatableValue() {\n      var _this = this;\n      var offset = this.length;\n      this.writeValue(0);\n      return function (value) {\n        _this._data.set(_this._getValue(value), offset);\n      };\n    }\n  }]);\n  return Writer;\n}();\nexport var Reader = /*#__PURE__*/function () {\n  function Reader(data, wordSize, coerceFunc) {\n    _classCallCheck(this, Reader);\n    defineReadOnly(this, \"_data\", arrayify(data));\n    defineReadOnly(this, \"wordSize\", wordSize || 32);\n    defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n    this._offset = 0;\n  }\n  _createClass(Reader, [{\n    key: \"data\",\n    get: function get() {\n      return hexlify(this._data);\n    }\n  }, {\n    key: \"consumed\",\n    get: function get() {\n      return this._offset;\n    }\n    // The default Coerce function\n  }, {\n    key: \"coerce\",\n    value: function coerce(name, value) {\n      if (this._coerceFunc) {\n        return this._coerceFunc(name, value);\n      }\n      return Reader.coerce(name, value);\n    }\n  }, {\n    key: \"_peekBytes\",\n    value: function _peekBytes(offset, length) {\n      var alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n      if (this._offset + alignedLength > this._data.length) {\n        logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n          length: this._data.length,\n          offset: this._offset + alignedLength\n        });\n      }\n      return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n  }, {\n    key: \"subReader\",\n    value: function subReader(offset) {\n      return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc);\n    }\n  }, {\n    key: \"readBytes\",\n    value: function readBytes(length) {\n      var bytes = this._peekBytes(0, length);\n      this._offset += bytes.length;\n      // @TODO: Make sure the length..end bytes are all 0?\n      return bytes.slice(0, length);\n    }\n  }, {\n    key: \"readValue\",\n    value: function readValue() {\n      return BigNumber.from(this.readBytes(this.wordSize));\n    }\n  }], [{\n    key: \"coerce\",\n    value: function coerce(name, value) {\n      var match = name.match(\"^u?int([0-9]+)$\");\n      if (match && parseInt(match[1]) <= 48) {\n        value = value.toNumber();\n      }\n      return value;\n    }\n  }]);\n  return Reader;\n}();","map":{"version":3,"names":["_classCallCheck","_createClass","arrayify","concat","hexlify","BigNumber","defineReadOnly","Logger","version","logger","checkResultErrors","result","errors","checkErrors","path","object","Array","isArray","key","childPath","slice","push","error","Coder","name","type","localName","dynamic","value","_throwError","message","throwArgumentError","Writer","wordSize","_data","_padding","Uint8Array","get","length","_writeData","data","writeBytes","bytes","_getValue","from","throwError","BUFFER_OVERRUN","offset","writeValue","writeUpdatableValue","_this","set","Reader","coerceFunc","_offset","coerce","_coerceFunc","_peekBytes","alignedLength","Math","ceil","subReader","readBytes","readValue","match","parseInt","toNumber"],"sources":["C:/Users/acer08022023/desktop/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/web3-eth/node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js"],"sourcesContent":["\"use strict\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = arrayify([]);\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() { return hexlify(this._data); }\n    get length() { return this._data.length; }\n    _writeData(data) {\n        this._data = concat([this._data, data]);\n        return data.length;\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        if (bytes.length % this.wordSize) {\n            bytes = concat([bytes, this._padding.slice(bytes.length % this.wordSize)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        let offset = this.length;\n        this.writeValue(0);\n        return (value) => {\n            this._data.set(this._getValue(value), offset);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this._data.length,\n                offset: this._offset + alignedLength\n            });\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc);\n    }\n    readBytes(length) {\n        let bytes = this._peekBytes(0, length);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}